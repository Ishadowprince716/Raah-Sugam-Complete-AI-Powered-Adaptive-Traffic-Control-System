# Use NVIDIA L4T base image for Jetson Nano
FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3 AS jetson

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libglib2.0-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    libatlas-base-dev \
    gfortran \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install OpenCV with CUDA support (pre-built for Jetson)
RUN pip3 install --no-cache-dir opencv-python==4.8.0.*

# Copy application code
COPY . .

# Create directories for models and data
RUN mkdir -p models demo_data logs debug

# Download YOLOv8 nano model
RUN python3 -c "from ultralytics import YOLO; YOLO('yolov8n.pt')"

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import sys; sys.exit(0)"

# Run the application
CMD ["python3", "main.py"]

# =============================================================================
# CPU-only fallback image for development/testing
# =============================================================================
FROM python:3.9-slim AS cpu

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install CPU-only OpenCV
RUN pip install --no-cache-dir opencv-python-headless==4.8.0.*

# Copy application code
COPY . .

# Create directories
RUN mkdir -p models demo_data logs debug

# Download models
RUN python3 -c "from ultralytics import YOLO; YOLO('yolov8n.pt')" || true

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV USE_GPU=false

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD python3 -c "import sys; sys.exit(0)"

# Run the application
CMD ["python3", "main.py"]